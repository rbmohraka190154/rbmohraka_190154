{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-\\.]+"},"docs":[{"location":"","text":"Crawling, Preprocessing, Modelling dan Evaluasi \u00b6 Crawling \u00b6 Crawling merupakan proses pada mesin pencarian seperti yahoo, google, dan lain lain untuk mencari atau memindai sebuah konten yang terdapat di situs web, yang berupa gambar, lembar produk, artikel dan lain lain. from bs4 import BeautifulSoup import requests url = 'https://www.detik.com/search/searchall?query=chelsea&siteid=2' batasAtas = 5 for halaman in range ( 1 , batasAtas + 1 ): source = requests . get ( url + str ( halaman )) . text soup = BeautifulSoup ( source , 'lxml' ) for article in soup . find_all ( 'article' ): headline = article . find ( 'h2' , class_ = 'title' ) . text print ( headline ) tanggal = article . find ( 'span' , class_ = 'date' ) . text print ( tanggal ) rangkuman = article . find ( 'p' ) . text print ( rangkuman ) print () Preprocessing \u00b6 Proprocessing adalah proses untuk mengubah bentuk data yang tidak terstruktur menjadi data terstruktur Case Folding \u00b6 Case folding adalah untuk mengubah huruf menjadi huruf kecil, ada banyak macam Case Folding yang dapat digunakan 1. Mengubah Text Menjadi Lowercase \u00b6 kalimat = \"Banyak hal dapat ditemui di Indonesia\" . lower_case = kalimat . lower () print ( lower_case ) #output #banyak hal dapat ditemui di indonesia 2. Menghapus Angka \u00b6 kalimat = \"Ada 2 hal untuk membuat hidup sehat\" hasil = re . sub ( r \"\\d+\" , \"\" , kalimat ) print ( hasil ) #output #Ada hal untuk membuat hidup sehat 3. Menghapus Tanda Baca \u00b6 kalimat = \"Kamu cantik& [dengan] itu\" hasil = kalimat . translate ( str . maketrans ( \"\" , \"\" string . punctuation )) #output #Kamu cantik dengan itu 4. Menghapus Karakter Kosong \u00b6 kalimat = \" \\t kamu cantik dengan ini \\t \" hasil = kalimat . strip () print ( hasil ) #output #kamu cantik dengan ini Tokenizing \u00b6 Tokenizing merupakan pemisahan teks yang akan menjadi potongan-potongan untuk di analisa kalimat = \"kelasku istanaku\" pisah = kalimat . split () print ( pisah ) #output #['kelasku', 'istanaku'] Filtering \u00b6 Filtering merupakan tahap menyaring kata penting dan tidak penting dari hasil token def stopword_removal ( token ): temp = [] for i in range ( len ( token )): if token [ i ] not in stopwords : temp . append ( token [ i ]) return temp Stemming \u00b6 stemming merupakan proses untuk mengubah ke kata bentuk dasar, seperti berjalan, menjalan akan diubah menjadi jalan from nltk.stem import PorterStemmer ps = PorterStemmer () kata = [ \"dengarkan\" ] for k in kata : print ( k , \" : \" , ps . stem ( k )) #ouput #dengarkan : dengar Modelling \u00b6 Modelling merupakan suatu proses menemukan suatu kelompok pada sebuah kata dari dokumen yang diberikan. Contohnya \u2018kerusakan\u2019, \u2018busi\u2019, \u2018pemilik mobil\u2019, \u2018montir\u2019 akan mewakili kelompok \u2018otomotif\u2019. Kasus penggunaan dari topik modelling adalah: Ringkasan Resume Search Engine Optimization Pengoptimalan Sistem Rekomendasi Meningkatkan Dukungan Pelanggan Dalam industri otomotif , pemodelan topik dapat membantu kita mengekstrak informasi yang berguna dan berharga yang tidak terstruktur. Informasi ini dapat digunakan untuk perbaikan mobil. Evaluasi \u00b6 ROUGE adalah yang paling banyak digunakan untuk mengevaluasi secara otomatis. Berikut metode yang paling banyak digunakan. ROUGE-n. Metode ukurannya didasarkan pada recall dan didasarkan pada membandingkan dari n-gram. ROUGE-L. Ukuran ini menggunakan Uprangkaian bersama terpanjang (Longest common subsequence) diantara serangkaian teks. Artinya semakin panjang LCS antara dua ringkasan kalimat maka semakin mirip. ROUGE-W ROUGE-L mempertimbangkan LCS tetapi tidak memberikan preferensi pada kalimat yang memiliki kata-kata yang lebih berurutan. ROUGE-S ROUGE-S mengukur kejadian bersama skip bigram pada ringkasan rujukan dan ringkasan mesin. ROUGE-SU Kelemahan dari ROUGE-S adalah hanya memperhatikan bigrams. JIka kalimat tidak berisi satu bigram yang overlaping maka tidak a kan menghasilkan bobot pada kalimat. Untuk mengatasi masalah ini ROUGE-S ini maka munculllah ROUGE-SU yang merupakan pengembangannya yang juga memperhatikan unigram. Implementasi Rouge dengan python ` ` Instalasi library ` ` atau ` ` pip install git + https : // github . com / tagucci / pythonrouge . gitImplementasi kedua ` ` pip install easy - rouge ` ` from rouge.rouge import rouge_n_sentence_level ` ` summary_sentence = 'the capital of China is Beijing' . split () ` ` reference_sentence = 'Beijing is the capital of China' . split () recall , precision , rouge = rouge_n_sentence_level ( summary_sentence , ` ` reference_sentence , 2 ) ` ` print ( 'ROUGE-2-R' , recall ) ` ` print ( 'ROUGE-2-P' , precision ) ` ` print ( 'ROUGE-2-F' , rouge ) ` ` ROUGE - 2 - R 0.6 ` ` ROUGE - 2 - P 0.6 ` ` ROUGE - 2 - F 0.6 ` ` ROUGE - 2 - R 0.6 ` ` from rouge import rouge_n_sentence_level ` ` from rouge import rouge_l_sentence_level ` ` from rouge import rouge_n_summary_level ` ` from rouge import rouge_l_summary_level ` ` from rouge import rouge_w_sentence_level ` ` from rouge import rouge_w_summary_level ` ` reference_sentence = 'the police killed the gunman' . split () ` ` summary_sentence = 'the gunman police killed' . split () ` ` print ( 'Sentence level:' ) ` ` score = rouge_n_sentence_level ( summary_sentence , reference_sentence , 1 ) ` ` print ( 'ROUGE-1: %f ' % score . f1_measure ) ` ` _ , _ , rouge_2 = rouge_n_sentence_level ( summary_sentence , reference_sentence , 2 ) ` ` print ( 'ROUGE-2: %f ' % rouge_2 ) ` ` _ , _ , rouge_l = rouge_l_sentence_level ( summary_sentence , reference_sentence ) ` ` print ( 'ROUGE-L: %f ' % rouge_l ) ` ` _ , _ , rouge_w = rouge_w_sentence_level ( summary_sentence , reference_sentence ) ` ` print ( 'ROUGE-W: %f ' % rouge_w ) ` ` Sentence level : ` ` ROUGE - 1 : 0.888889 ` ` ROUGE - 2 : 0.571429 ` ` ROUGE - L : 0.666667 ` ` ROUGE - W : 0.550527 Outputnya adalah ` ` Outputnya adalah ` ` from rouge import rouge_n_sentence_level ` ` from rouge import rouge_l_sentence_level ` ` from rouge import rouge_n_summary_level ` ` from rouge import rouge_l_summary_level ` ` from rouge import rouge_w_sentence_level ` ` from rouge import rouge_w_summary_level ` ` reference_sentences = [ 'The gunman was shot dead by the police before more` `people got hurt' . split (), ` ` 'This tragedy causes lives of five , the gunman included' . split (), ` ` 'The motivation of the gunman remains unclear' . split (), ` ` ] ` ` summary_sentences = [ 'Police killed the gunman . no more people got` `hurt' . split (), ` ` 'Five people got killed including the gunman' . split (), ` ` 'It is unclear why the gunman killed people' . split (), ` ` ] ` ` print ( 'Summary level:' ) ` ` _ , _ , rouge_1 = rouge_n_summary_level ( summary_sentences , reference_sentences , 1 ) ` ` print ( 'ROUGE-1: %f ' % rouge_1 ) ` ` _ , _ , rouge_2 = rouge_n_summary_level ( summary_sentences , reference_sentences , 2 ) ` ` print ( 'ROUGE-2: %f ' % rouge_2 ) ` ` _ , _ , rouge_l = rouge_l_summary_level ( summary_sentences , reference_sentences ) ` ` print ( 'ROUGE-L: %f ' % rouge_l ) ` ` _ , _ , rouge_w = rouge_w_summary_level ( summary_sentences , reference_sentences ) ` ` print ( 'ROUGE-W: %f ' % rouge_w ) ` ` Summary level : ` ` ROUGE - 1 : 0.400000 ` ` ROUGE - 2 : 0.188679 ` ` ROUGE - L : 0.327273 ` ` ROUGE - W : 0.200430 ` ` recall , precision , rouge_1 = rouge_n_summary_level ( summary_sentences , ` ` reference_sentences , 1 ) ` ` print ( 'ROUGE-2-R' , recall ) ` ` print ( 'ROUGE-2-P' , precision ) ` ` print ( 'ROUGE-2-F' , rouge ) ROUGE - 2 - R 0.36666666666666664 ` ` ROUGE - 2 - P 0.44 ` ` ROUGE - 2 - F 0.6","title":"Crawling, Preprocessing, Modelling dan Evaluasi"},{"location":"#crawling_preprocessing_modelling_dan_evaluasi","text":"","title":"Crawling, Preprocessing, Modelling dan Evaluasi"},{"location":"#crawling","text":"Crawling merupakan proses pada mesin pencarian seperti yahoo, google, dan lain lain untuk mencari atau memindai sebuah konten yang terdapat di situs web, yang berupa gambar, lembar produk, artikel dan lain lain. from bs4 import BeautifulSoup import requests url = 'https://www.detik.com/search/searchall?query=chelsea&siteid=2' batasAtas = 5 for halaman in range ( 1 , batasAtas + 1 ): source = requests . get ( url + str ( halaman )) . text soup = BeautifulSoup ( source , 'lxml' ) for article in soup . find_all ( 'article' ): headline = article . find ( 'h2' , class_ = 'title' ) . text print ( headline ) tanggal = article . find ( 'span' , class_ = 'date' ) . text print ( tanggal ) rangkuman = article . find ( 'p' ) . text print ( rangkuman ) print ()","title":"Crawling"},{"location":"#preprocessing","text":"Proprocessing adalah proses untuk mengubah bentuk data yang tidak terstruktur menjadi data terstruktur","title":"Preprocessing"},{"location":"#case_folding","text":"Case folding adalah untuk mengubah huruf menjadi huruf kecil, ada banyak macam Case Folding yang dapat digunakan","title":"Case Folding"},{"location":"#1_mengubah_text_menjadi_lowercase","text":"kalimat = \"Banyak hal dapat ditemui di Indonesia\" . lower_case = kalimat . lower () print ( lower_case ) #output #banyak hal dapat ditemui di indonesia","title":"1. Mengubah Text Menjadi Lowercase"},{"location":"#2_menghapus_angka","text":"kalimat = \"Ada 2 hal untuk membuat hidup sehat\" hasil = re . sub ( r \"\\d+\" , \"\" , kalimat ) print ( hasil ) #output #Ada hal untuk membuat hidup sehat","title":"2. Menghapus Angka"},{"location":"#3_menghapus_tanda_baca","text":"kalimat = \"Kamu cantik& [dengan] itu\" hasil = kalimat . translate ( str . maketrans ( \"\" , \"\" string . punctuation )) #output #Kamu cantik dengan itu","title":"3. Menghapus Tanda Baca"},{"location":"#4_menghapus_karakter_kosong","text":"kalimat = \" \\t kamu cantik dengan ini \\t \" hasil = kalimat . strip () print ( hasil ) #output #kamu cantik dengan ini","title":"4. Menghapus Karakter Kosong"},{"location":"#tokenizing","text":"Tokenizing merupakan pemisahan teks yang akan menjadi potongan-potongan untuk di analisa kalimat = \"kelasku istanaku\" pisah = kalimat . split () print ( pisah ) #output #['kelasku', 'istanaku']","title":"Tokenizing"},{"location":"#filtering","text":"Filtering merupakan tahap menyaring kata penting dan tidak penting dari hasil token def stopword_removal ( token ): temp = [] for i in range ( len ( token )): if token [ i ] not in stopwords : temp . append ( token [ i ]) return temp","title":"Filtering"},{"location":"#stemming","text":"stemming merupakan proses untuk mengubah ke kata bentuk dasar, seperti berjalan, menjalan akan diubah menjadi jalan from nltk.stem import PorterStemmer ps = PorterStemmer () kata = [ \"dengarkan\" ] for k in kata : print ( k , \" : \" , ps . stem ( k )) #ouput #dengarkan : dengar","title":"Stemming"},{"location":"#modelling","text":"Modelling merupakan suatu proses menemukan suatu kelompok pada sebuah kata dari dokumen yang diberikan. Contohnya \u2018kerusakan\u2019, \u2018busi\u2019, \u2018pemilik mobil\u2019, \u2018montir\u2019 akan mewakili kelompok \u2018otomotif\u2019. Kasus penggunaan dari topik modelling adalah: Ringkasan Resume Search Engine Optimization Pengoptimalan Sistem Rekomendasi Meningkatkan Dukungan Pelanggan Dalam industri otomotif , pemodelan topik dapat membantu kita mengekstrak informasi yang berguna dan berharga yang tidak terstruktur. Informasi ini dapat digunakan untuk perbaikan mobil.","title":"Modelling"},{"location":"#evaluasi","text":"ROUGE adalah yang paling banyak digunakan untuk mengevaluasi secara otomatis. Berikut metode yang paling banyak digunakan. ROUGE-n. Metode ukurannya didasarkan pada recall dan didasarkan pada membandingkan dari n-gram. ROUGE-L. Ukuran ini menggunakan Uprangkaian bersama terpanjang (Longest common subsequence) diantara serangkaian teks. Artinya semakin panjang LCS antara dua ringkasan kalimat maka semakin mirip. ROUGE-W ROUGE-L mempertimbangkan LCS tetapi tidak memberikan preferensi pada kalimat yang memiliki kata-kata yang lebih berurutan. ROUGE-S ROUGE-S mengukur kejadian bersama skip bigram pada ringkasan rujukan dan ringkasan mesin. ROUGE-SU Kelemahan dari ROUGE-S adalah hanya memperhatikan bigrams. JIka kalimat tidak berisi satu bigram yang overlaping maka tidak a kan menghasilkan bobot pada kalimat. Untuk mengatasi masalah ini ROUGE-S ini maka munculllah ROUGE-SU yang merupakan pengembangannya yang juga memperhatikan unigram. Implementasi Rouge dengan python ` ` Instalasi library ` ` atau ` ` pip install git + https : // github . com / tagucci / pythonrouge . gitImplementasi kedua ` ` pip install easy - rouge ` ` from rouge.rouge import rouge_n_sentence_level ` ` summary_sentence = 'the capital of China is Beijing' . split () ` ` reference_sentence = 'Beijing is the capital of China' . split () recall , precision , rouge = rouge_n_sentence_level ( summary_sentence , ` ` reference_sentence , 2 ) ` ` print ( 'ROUGE-2-R' , recall ) ` ` print ( 'ROUGE-2-P' , precision ) ` ` print ( 'ROUGE-2-F' , rouge ) ` ` ROUGE - 2 - R 0.6 ` ` ROUGE - 2 - P 0.6 ` ` ROUGE - 2 - F 0.6 ` ` ROUGE - 2 - R 0.6 ` ` from rouge import rouge_n_sentence_level ` ` from rouge import rouge_l_sentence_level ` ` from rouge import rouge_n_summary_level ` ` from rouge import rouge_l_summary_level ` ` from rouge import rouge_w_sentence_level ` ` from rouge import rouge_w_summary_level ` ` reference_sentence = 'the police killed the gunman' . split () ` ` summary_sentence = 'the gunman police killed' . split () ` ` print ( 'Sentence level:' ) ` ` score = rouge_n_sentence_level ( summary_sentence , reference_sentence , 1 ) ` ` print ( 'ROUGE-1: %f ' % score . f1_measure ) ` ` _ , _ , rouge_2 = rouge_n_sentence_level ( summary_sentence , reference_sentence , 2 ) ` ` print ( 'ROUGE-2: %f ' % rouge_2 ) ` ` _ , _ , rouge_l = rouge_l_sentence_level ( summary_sentence , reference_sentence ) ` ` print ( 'ROUGE-L: %f ' % rouge_l ) ` ` _ , _ , rouge_w = rouge_w_sentence_level ( summary_sentence , reference_sentence ) ` ` print ( 'ROUGE-W: %f ' % rouge_w ) ` ` Sentence level : ` ` ROUGE - 1 : 0.888889 ` ` ROUGE - 2 : 0.571429 ` ` ROUGE - L : 0.666667 ` ` ROUGE - W : 0.550527 Outputnya adalah ` ` Outputnya adalah ` ` from rouge import rouge_n_sentence_level ` ` from rouge import rouge_l_sentence_level ` ` from rouge import rouge_n_summary_level ` ` from rouge import rouge_l_summary_level ` ` from rouge import rouge_w_sentence_level ` ` from rouge import rouge_w_summary_level ` ` reference_sentences = [ 'The gunman was shot dead by the police before more` `people got hurt' . split (), ` ` 'This tragedy causes lives of five , the gunman included' . split (), ` ` 'The motivation of the gunman remains unclear' . split (), ` ` ] ` ` summary_sentences = [ 'Police killed the gunman . no more people got` `hurt' . split (), ` ` 'Five people got killed including the gunman' . split (), ` ` 'It is unclear why the gunman killed people' . split (), ` ` ] ` ` print ( 'Summary level:' ) ` ` _ , _ , rouge_1 = rouge_n_summary_level ( summary_sentences , reference_sentences , 1 ) ` ` print ( 'ROUGE-1: %f ' % rouge_1 ) ` ` _ , _ , rouge_2 = rouge_n_summary_level ( summary_sentences , reference_sentences , 2 ) ` ` print ( 'ROUGE-2: %f ' % rouge_2 ) ` ` _ , _ , rouge_l = rouge_l_summary_level ( summary_sentences , reference_sentences ) ` ` print ( 'ROUGE-L: %f ' % rouge_l ) ` ` _ , _ , rouge_w = rouge_w_summary_level ( summary_sentences , reference_sentences ) ` ` print ( 'ROUGE-W: %f ' % rouge_w ) ` ` Summary level : ` ` ROUGE - 1 : 0.400000 ` ` ROUGE - 2 : 0.188679 ` ` ROUGE - L : 0.327273 ` ` ROUGE - W : 0.200430 ` ` recall , precision , rouge_1 = rouge_n_summary_level ( summary_sentences , ` ` reference_sentences , 1 ) ` ` print ( 'ROUGE-2-R' , recall ) ` ` print ( 'ROUGE-2-P' , precision ) ` ` print ( 'ROUGE-2-F' , rouge ) ROUGE - 2 - R 0.36666666666666664 ` ` ROUGE - 2 - P 0.44 ` ` ROUGE - 2 - F 0.6","title":"Evaluasi"},{"location":"license/","text":"License \u00b6 MIT License The graduate cap icon made by Freepik from www.flaticon.com is licensed by CC 3.0 BY Support Author \u00b6 Amazon wish list","title":"License"},{"location":"license/#license","text":"MIT License The graduate cap icon made by Freepik from www.flaticon.com is licensed by CC 3.0 BY","title":"License"},{"location":"license/#support_author","text":"Amazon wish list","title":"Support Author"},{"location":"material-for-mkdocs/","text":"Material for MkDocs \u00b6 MkDocs \u00b6 mkdocs/mkdocs: Project documentation with Markdown - GitHub Material for MkDocs \u00b6 squidfunk/mkdocs-material: A Material Design theme for MkDocs","title":"Material for MkDocs"},{"location":"material-for-mkdocs/#material_for_mkdocs","text":"","title":"Material for MkDocs"},{"location":"material-for-mkdocs/#mkdocs","text":"mkdocs/mkdocs: Project documentation with Markdown - GitHub","title":"MkDocs"},{"location":"material-for-mkdocs/#material_for_mkdocs_1","text":"squidfunk/mkdocs-material: A Material Design theme for MkDocs","title":"Material for MkDocs"},{"location":"extensions/code-hilite/","text":"CodeHilite \u00b6 CodeHilite - Material for MkDocs Supported languages - Pygments Configure mkdocs.yml \u00b6 markdown_extensions: - codehilite","title":"CodeHilite"},{"location":"extensions/code-hilite/#codehilite","text":"CodeHilite - Material for MkDocs Supported languages - Pygments","title":"CodeHilite"},{"location":"extensions/code-hilite/#configure_mkdocsyml","text":"markdown_extensions: - codehilite","title":"Configure mkdocs.yml"},{"location":"extensions/footnote/","text":"Footnote \u00b6 Footnotes - Material for MkDocs Configure mkdocs.yml \u00b6 markdown_extensions: - footnotes Example \u00b6 Footnote example 1. 1 Footnote example 2. 2 One line \u21a9 First line Second line \u21a9","title":"Footnote"},{"location":"extensions/footnote/#footnote","text":"Footnotes - Material for MkDocs","title":"Footnote"},{"location":"extensions/footnote/#configure_mkdocsyml","text":"markdown_extensions: - footnotes","title":"Configure mkdocs.yml"},{"location":"extensions/footnote/#example","text":"Footnote example 1. 1 Footnote example 2. 2 One line \u21a9 First line Second line \u21a9","title":"Example"},{"location":"extensions/mathjax/","text":"MathJax \u00b6 PyMdown - Material for MkDocs Configure mkdocs.yml \u00b6 markdown_extensions: - mdx_math: enable_dollar_delimiter: True Example code \u00b6 $$ P \\c dot Q = \\| P \\|\\| Q \\|\\c os \\a lpha $$ Example rendering \u00b6 P\\cdot Q = \\|P\\|\\|Q\\|\\cos\\alpha","title":"MathJax"},{"location":"extensions/mathjax/#mathjax","text":"PyMdown - Material for MkDocs","title":"MathJax"},{"location":"extensions/mathjax/#configure_mkdocsyml","text":"markdown_extensions: - mdx_math: enable_dollar_delimiter: True","title":"Configure mkdocs.yml"},{"location":"extensions/mathjax/#example_code","text":"$$ P \\c dot Q = \\| P \\|\\| Q \\|\\c os \\a lpha $$","title":"Example code"},{"location":"extensions/mathjax/#example_rendering","text":"P\\cdot Q = \\|P\\|\\|Q\\|\\cos\\alpha","title":"Example rendering"},{"location":"getting-started/docker/","text":"Start with Docker \u00b6 Public docker image \u00b6 Package mkdocs-material - GitHub peaceiris/mkdocs-material - Docker Hub docker-compose \u00b6 Here is an example docker-compose.yml Please check the latest tag before you go. docker-compose up Go to http://localhost:8000/","title":"Start with Docker"},{"location":"getting-started/docker/#start_with_docker","text":"","title":"Start with Docker"},{"location":"getting-started/docker/#public_docker_image","text":"Package mkdocs-material - GitHub peaceiris/mkdocs-material - Docker Hub","title":"Public docker image"},{"location":"getting-started/docker/#docker-compose","text":"Here is an example docker-compose.yml Please check the latest tag before you go. docker-compose up Go to http://localhost:8000/","title":"docker-compose"},{"location":"getting-started/download-boilerplate/","text":"Download boilerplate \u00b6 Git clone \u00b6 git clone https://github.com/peaceiris/mkdocs-material-boilerplate.git cd mkdocs-material-boilerplate Download zip \u00b6 wget 'https://github.com/peaceiris/mkdocs-material-boilerplate/archive/master.zip' unzip master.zip cd mkdocs-material-boilerplate-master \ud83d\udc49 Click me to download zip","title":"Download boilerplate"},{"location":"getting-started/download-boilerplate/#download_boilerplate","text":"","title":"Download boilerplate"},{"location":"getting-started/download-boilerplate/#git_clone","text":"git clone https://github.com/peaceiris/mkdocs-material-boilerplate.git cd mkdocs-material-boilerplate","title":"Git clone"},{"location":"getting-started/download-boilerplate/#download_zip","text":"wget 'https://github.com/peaceiris/mkdocs-material-boilerplate/archive/master.zip' unzip master.zip cd mkdocs-material-boilerplate-master \ud83d\udc49 Click me to download zip","title":"Download zip"},{"location":"getting-started/invoke/","text":"Serve and open with invoke \u00b6 invoke \u00b6 Invoke is a Python (2.7 and 3.4+) library for managing shell-oriented subprocesses and organizing executable Python code into CLI-invokable tasks. It draws inspiration from various sources (make/rake, Fabric 1.x, etc) to arrive at a powerful & clean feature set. pyinvoke/invoke: Pythonic task management & command execution. Serve and open \u00b6 Run mkdocs serve and open browser automatically. inv serve Serving on localhost:8000 # set IP and port inv serve --dev-addr 'localhost:5000' # set config file inv serve --config-file ./mkdocs-sample.yml Show all tasks \u00b6 $ inv --list Available tasks: serve Serve site and open browser Show task help. $ inv serve --help Usage: inv [ oke ] [ --core-opts ] serve [ --options ] [ other tasks here ... ] Docstring: Serve site and open browser Options: -c STRING, --config-file = STRING Provide a specific MkDocs config -d STRING, --dev-addr = STRING IP address and port to serve documentation locally ( default: localhost:8000 ) Tasks are defined by tasks.py","title":"Serve and open with invoke"},{"location":"getting-started/invoke/#serve_and_open_with_invoke","text":"","title":"Serve and open with invoke"},{"location":"getting-started/invoke/#invoke","text":"Invoke is a Python (2.7 and 3.4+) library for managing shell-oriented subprocesses and organizing executable Python code into CLI-invokable tasks. It draws inspiration from various sources (make/rake, Fabric 1.x, etc) to arrive at a powerful & clean feature set. pyinvoke/invoke: Pythonic task management & command execution.","title":"invoke"},{"location":"getting-started/invoke/#serve_and_open","text":"Run mkdocs serve and open browser automatically. inv serve Serving on localhost:8000 # set IP and port inv serve --dev-addr 'localhost:5000' # set config file inv serve --config-file ./mkdocs-sample.yml","title":"Serve and open"},{"location":"getting-started/invoke/#show_all_tasks","text":"$ inv --list Available tasks: serve Serve site and open browser Show task help. $ inv serve --help Usage: inv [ oke ] [ --core-opts ] serve [ --options ] [ other tasks here ... ] Docstring: Serve site and open browser Options: -c STRING, --config-file = STRING Provide a specific MkDocs config -d STRING, --dev-addr = STRING IP address and port to serve documentation locally ( default: localhost:8000 ) Tasks are defined by tasks.py","title":"Show all tasks"},{"location":"getting-started/pip/","text":"Start with pip (Anaconda, Miniconda) \u00b6 pip install -r requirements.txt pip install -r requirements-dev.txt inv command is also available.","title":"Start with pip (Anaconda, Miniconda)"},{"location":"getting-started/pip/#start_with_pip_anaconda_miniconda","text":"pip install -r requirements.txt pip install -r requirements-dev.txt inv command is also available.","title":"Start with pip (Anaconda, Miniconda)"},{"location":"getting-started/pipenv/","text":"Start with pipenv \u00b6 pipenv \u00b6 Pipenv is a tool that aims to bring the best of all packaging worlds (bundler, composer, npm, cargo, yarn, etc.) to the Python world. pypa/pipenv: Python Development Workflow for Humans. Install all packages \u00b6 pipenv sync --dev # Installs all packages specified in Pipfile.lock. Run MkDocs \u00b6 pipenv shell # Spawns a shell within the virtualenv. mkdocs serve Or, run mkdocs with pipenv run pipenv run mkdocs serve pipenv run \u00b6 pipenv task are also defined by Pipfile pipenv run version # mkdocs --version pipenv run help # mkdocs --help pipenv run inv serve # inv serve pipenv run serve # mkdocs serve pipenv run build # mkdocs build pipenv run deploy # mkdocs gh-deploy","title":"Start with pipenv"},{"location":"getting-started/pipenv/#start_with_pipenv","text":"","title":"Start with pipenv"},{"location":"getting-started/pipenv/#pipenv","text":"Pipenv is a tool that aims to bring the best of all packaging worlds (bundler, composer, npm, cargo, yarn, etc.) to the Python world. pypa/pipenv: Python Development Workflow for Humans.","title":"pipenv"},{"location":"getting-started/pipenv/#install_all_packages","text":"pipenv sync --dev # Installs all packages specified in Pipfile.lock.","title":"Install all packages"},{"location":"getting-started/pipenv/#run_mkdocs","text":"pipenv shell # Spawns a shell within the virtualenv. mkdocs serve Or, run mkdocs with pipenv run pipenv run mkdocs serve","title":"Run MkDocs"},{"location":"getting-started/pipenv/#pipenv_run","text":"pipenv task are also defined by Pipfile pipenv run version # mkdocs --version pipenv run help # mkdocs --help pipenv run inv serve # inv serve pipenv run serve # mkdocs serve pipenv run build # mkdocs build pipenv run deploy # mkdocs gh-deploy","title":"pipenv run"},{"location":"hosting-and-deployment/aws-amplify-console/","text":"Host on AWS Amplify Console \u00b6 AWS Amplify Console You can use Password protection each branch. Use the following build specification YML file. mkdocs-material-boilerplate/amplify.yml","title":"Host on AWS Amplify Console"},{"location":"hosting-and-deployment/aws-amplify-console/#host_on_aws_amplify_console","text":"AWS Amplify Console You can use Password protection each branch. Use the following build specification YML file. mkdocs-material-boilerplate/amplify.yml","title":"Host on AWS Amplify Console"},{"location":"hosting-and-deployment/combinations/","text":"Hosting and Deployment \u00b6 GitHub Pages and GitHub \u00b6 Host source code on GitHub. Build and deploy with: mkdocs gh-deploy GitHub Actions GitLab Pages and GitLab \u00b6 Host source code on GitLab. Build and deploy with GitLab CI/CD. Netlify \u00b6 Host source code on: GitHub GitLab BitBucket Build and deploy with Netlify. AWS Amplify Console \u00b6 Host source code on: GitHub GitLab BitBucket AWS CodeCommit Build and deploy with AWS Amplify Console.","title":"Hosting and Deployment"},{"location":"hosting-and-deployment/combinations/#hosting_and_deployment","text":"","title":"Hosting and Deployment"},{"location":"hosting-and-deployment/combinations/#github_pages_and_github","text":"Host source code on GitHub. Build and deploy with: mkdocs gh-deploy GitHub Actions","title":"GitHub Pages and GitHub"},{"location":"hosting-and-deployment/combinations/#gitlab_pages_and_gitlab","text":"Host source code on GitLab. Build and deploy with GitLab CI/CD.","title":"GitLab Pages and GitLab"},{"location":"hosting-and-deployment/combinations/#netlify","text":"Host source code on: GitHub GitLab BitBucket Build and deploy with Netlify.","title":"Netlify"},{"location":"hosting-and-deployment/combinations/#aws_amplify_console","text":"Host source code on: GitHub GitLab BitBucket AWS CodeCommit Build and deploy with AWS Amplify Console.","title":"AWS Amplify Console"},{"location":"hosting-and-deployment/github-pages/","text":"Host on GitHub Pages \u00b6 Demo site on GitHub Pages (build & deploy with GitHub Actions) Build and deploy with GitHub Actions \u00b6 peaceiris/actions-gh-pages: GitHub Actions for deploying to GitHub Pages with Static Site Generators Go to the repository and read the latest README.md for more details. Build and deploy with mkdocs gh-deploy \u00b6 pipenv \u00b6 pipenv run deploy # OR pipenv shell mkdocs gh-deploy # OR pipenv run mkdocs gh-deploy","title":"Host on GitHub Pages"},{"location":"hosting-and-deployment/github-pages/#host_on_github_pages","text":"Demo site on GitHub Pages (build & deploy with GitHub Actions)","title":"Host on GitHub Pages"},{"location":"hosting-and-deployment/github-pages/#build_and_deploy_with_github_actions","text":"peaceiris/actions-gh-pages: GitHub Actions for deploying to GitHub Pages with Static Site Generators Go to the repository and read the latest README.md for more details.","title":"Build and deploy with GitHub Actions"},{"location":"hosting-and-deployment/github-pages/#build_and_deploy_with_mkdocs_gh-deploy","text":"","title":"Build and deploy with mkdocs gh-deploy"},{"location":"hosting-and-deployment/github-pages/#pipenv","text":"pipenv run deploy # OR pipenv shell mkdocs gh-deploy # OR pipenv run mkdocs gh-deploy","title":"pipenv"},{"location":"hosting-and-deployment/gitlab-pages/","text":"Host on GitLab Pages \u00b6 See .gitlab-ci.yml","title":"Host on GitLab Pages"},{"location":"hosting-and-deployment/gitlab-pages/#host_on_gitlab_pages","text":"See .gitlab-ci.yml","title":"Host on GitLab Pages"},{"location":"hosting-and-deployment/netlify/","text":"Host on Netlify \u00b6 Demo site on Netlify (build & deploy with Netlify) Create GitHub repository and deploy to Netlify with the following button in 1 min.","title":"Host on Netlify"},{"location":"hosting-and-deployment/netlify/#host_on_netlify","text":"Demo site on Netlify (build & deploy with Netlify) Create GitHub repository and deploy to Netlify with the following button in 1 min.","title":"Host on Netlify"}]}